/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface;

import Business.DB4OUtil.DB4OUtil;
import Business.Ecosystem.Ecosystem;
import Business.Orders.Orders;
import Business.Role.SalesAdmin;
import Business.Role.SalesPerson;
import Business.Role.clinicOfficer;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.text.SimpleDateFormat;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sreej
 */
public class SalesAdminWorkArea extends javax.swing.JFrame {

    /**
     * Creates new form SalesAdminWorkArea1
     */
    SalesAdmin salesAdmin;
    Orders selectedOrder;
    DB4OUtil dB40Util = DB4OUtil.getInstance();
    Ecosystem ecoSystem = Ecosystem.getInstance();
    SalesPerson selectedSalesPerson;
    SalesPerson selectedSalesPerson1;

    public SalesAdminWorkArea(SalesAdmin sa) {
        initComponents();
//        ecoSystem = dB40Util.retrieveSystem();
//        Ecosystem.setInstance(ecoSystem);
        jPanel4.setBackground(new Color(255, 255, 255, 90));
        workPanel.setBackground(new Color(255, 255, 255, 100));
        jPanel2.setBackground(new Color(255, 255, 255, 90));
        workPanel1.setBackground(new Color(255, 255, 255, 100));
        jPanel14.setBackground(new Color(255, 255, 255, 90));
        workPanel3.setBackground(new Color(255, 255, 255, 100));
        jPanel11.setBackground(new Color(255, 255, 255, 90));
        workPanel2.setBackground(new Color(255, 255, 255, 100));
        this.salesAdmin = sa;
        firstName.setName("FirstName");
        lastName.setName("LastName");
        eMailId.setName("EmailId");
        dateOfBirth.setName("DOB");
        gender1.setName("Gender");
        phone.setName("Phone");
        passWord.setName("password");
        populateOrder();
        populatesales();
        populateSalesDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        workPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        gender1 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        eMailId = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        passWord = new javax.swing.JTextField();
        createPatient = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        dateOfBirth = new com.toedter.calendar.JDateChooser();
        jLabel34 = new javax.swing.JLabel();
        loc = new javax.swing.JTextField();
        location = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        location1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        workPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesPersonTable = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        workPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        pnum = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        view = new javax.swing.JButton();
        gender = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        password = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        workPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        order = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        sales = new javax.swing.JTable();
        assign = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 700));
        setSize(new java.awt.Dimension(1200, 700));

        jTabbedPane1.setBackground(java.awt.Color.white);
        jTabbedPane1.setForeground(java.awt.Color.black);

        jPanel1.setLayout(null);

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setText("Gender");

        gender1.setBackground(java.awt.Color.white);
        gender1.setForeground(java.awt.Color.black);
        gender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("E-mail Id ");

        eMailId.setBackground(java.awt.Color.white);
        eMailId.setForeground(java.awt.Color.black);
        eMailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eMailIdActionPerformed(evt);
            }
        });

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("DOB ");

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel20.setText("Phone Number ");

        phone.setBackground(java.awt.Color.white);
        phone.setForeground(java.awt.Color.black);
        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });

        passWord.setBackground(java.awt.Color.white);
        passWord.setForeground(java.awt.Color.black);

        createPatient.setBackground(new java.awt.Color(0, 102, 153));
        createPatient.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        createPatient.setForeground(new java.awt.Color(255, 255, 255));
        createPatient.setText("Create");
        createPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPatientActionPerformed(evt);
            }
        });

        jLabel21.setBackground(new java.awt.Color(0, 0, 0));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setText("Password ");

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        jLabel16.setText("Sales Person Creation");

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("First Name ");

        firstName.setBackground(java.awt.Color.white);
        firstName.setForeground(java.awt.Color.black);
        firstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameActionPerformed(evt);
            }
        });

        lastName.setBackground(java.awt.Color.white);
        lastName.setForeground(java.awt.Color.black);
        lastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameActionPerformed(evt);
            }
        });

        jLabel33.setBackground(new java.awt.Color(0, 0, 0));
        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel33.setText("Last Name ");

        dateOfBirth.setBackground(java.awt.Color.white);
        dateOfBirth.setForeground(java.awt.Color.black);

        jLabel34.setBackground(new java.awt.Color(0, 0, 0));
        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel34.setText("Address  ");

        loc.setBackground(java.awt.Color.white);
        loc.setForeground(java.awt.Color.black);

        location.setText("Set Location");
        location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationActionPerformed(evt);
            }
        });

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/previous (4).png"))); // NOI18N
        jLabel24.setText("jLabel24");
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });

        location1.setText("Populate");
        location1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                location1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout workPanelLayout = new javax.swing.GroupLayout(workPanel);
        workPanel.setLayout(workPanelLayout);
        workPanelLayout.setHorizontalGroup(
            workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workPanelLayout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(workPanelLayout.createSequentialGroup()
                                .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(34, 34, 34)
                                .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eMailId, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gender1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(workPanelLayout.createSequentialGroup()
                                .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel34))
                                .addGap(62, 62, 62)
                                .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passWord, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(loc, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createPatient))))
                        .addGap(44, 44, 44)
                        .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(location1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(workPanelLayout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(jLabel16)))
                .addContainerGap(251, Short.MAX_VALUE))
        );
        workPanelLayout.setVerticalGroup(
            workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanelLayout.createSequentialGroup()
                .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel24))
                    .addGroup(workPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel16)
                        .addGap(41, 41, 41)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eMailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(dateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(26, 26, 26)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(31, 31, 31)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(passWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(workPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(loc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(location)
                            .addComponent(location1))))
                .addGap(33, 33, 33)
                .addComponent(createPatient)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jPanel1.add(workPanel);
        workPanel.setBounds(0, 0, 1200, 670);

        jPanel4.setAlignmentY(0.0F);
        jPanel4.setLayout(new javax.swing.OverlayLayout(jPanel4));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/4393.jpg"))); // NOI18N
        jLabel4.setAlignmentY(0.0F);
        jPanel4.add(jLabel4);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(0, 0, 1120, 700);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new javax.swing.OverlayLayout(jPanel3));
        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 0, 1500, 630);

        jTabbedPane1.addTab("Sales Person Creation", jPanel1);

        jPanel2.setBackground(new java.awt.Color(178, 198, 255));
        jPanel2.setLayout(null);

        salesPersonTable.setBackground(new java.awt.Color(153, 153, 153));
        salesPersonTable.setForeground(new java.awt.Color(255, 255, 255));
        salesPersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Email Id", "Gender", "DOB", "Phone", "SalesPersonId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(salesPersonTable);

        javax.swing.GroupLayout workPanel1Layout = new javax.swing.GroupLayout(workPanel1);
        workPanel1.setLayout(workPanel1Layout);
        workPanel1Layout.setHorizontalGroup(
            workPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1087, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        workPanel1Layout.setVerticalGroup(
            workPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jPanel2.add(workPanel1);
        workPanel1.setBounds(0, 0, 1200, 670);

        jPanel8.setLayout(new javax.swing.OverlayLayout(jPanel8));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/empty-hospital-reception-counter-hallway-waiting-room-seats-medical-examination-appointment-with-physician-registration-desk-with-waiting-area-help-patients-with-disease-diagnosis.jpg"))); // NOI18N
        jPanel8.add(jLabel22);

        jPanel2.add(jPanel8);
        jPanel8.setBounds(0, 0, 1500, 1000);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new javax.swing.OverlayLayout(jPanel9));
        jPanel2.add(jPanel9);
        jPanel9.setBounds(0, 0, 1500, 630);

        jTabbedPane1.addTab("Sales Person Directory", jPanel2);

        jPanel6.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel7.setText("Phone Number");

        lname.setBackground(java.awt.Color.white);
        lname.setForeground(new java.awt.Color(0, 0, 0));

        fname.setBackground(java.awt.Color.white);
        fname.setForeground(new java.awt.Color(0, 0, 0));

        pnum.setBackground(java.awt.Color.white);
        pnum.setForeground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel6.setText("Gender");

        email.setEditable(false);
        email.setBackground(new java.awt.Color(255, 255, 255));
        email.setForeground(new java.awt.Color(0, 0, 0));
        email.setEnabled(false);
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel11.setText("Email");

        search.setBackground(java.awt.Color.white);
        search.setForeground(new java.awt.Color(0, 0, 0));

        update.setBackground(new java.awt.Color(0, 102, 153));
        update.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(153, 0, 0));
        delete.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        view.setBackground(new java.awt.Color(0, 102, 153));
        view.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        view.setForeground(new java.awt.Color(255, 255, 255));
        view.setText("Search");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        gender.setBackground(java.awt.Color.white);
        gender.setForeground(new java.awt.Color(0, 0, 0));
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel5.setText("Date of Birth");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel3.setText("Last Name");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel2.setText("First Name");

        dob.setBackground(java.awt.Color.white);
        dob.setForeground(new java.awt.Color(0, 0, 0));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel14.setText("Email");

        jButton1.setText("Update Password");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        password.setBackground(java.awt.Color.white);
        password.setForeground(new java.awt.Color(0, 0, 0));

        jLabel25.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel25.setText("Password");

        javax.swing.GroupLayout workPanel2Layout = new javax.swing.GroupLayout(workPanel2);
        workPanel2.setLayout(workPanel2Layout);
        workPanel2Layout.setHorizontalGroup(
            workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanel2Layout.createSequentialGroup()
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workPanel2Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel11)
                        .addGap(48, 48, 48)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(view))
                    .addGroup(workPanel2Layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(workPanel2Layout.createSequentialGroup()
                                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workPanel2Layout.createSequentialGroup()
                                        .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2))
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(27, 27, 27))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workPanel2Layout.createSequentialGroup()
                                        .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel25)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)))
                                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pnum, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workPanel2Layout.createSequentialGroup()
                                        .addComponent(update)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(delete))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1)
                                .addGap(34, 34, 34)))))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        workPanel2Layout.setVerticalGroup(
            workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(view))
                .addGap(90, 90, 90)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(26, 26, 26)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(29, 29, 29)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(35, 35, 35)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(pnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(workPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(update))
                .addGap(62, 62, 62))
        );

        jPanel6.add(workPanel2);
        workPanel2.setBounds(0, 0, 1200, 670);

        jPanel11.setPreferredSize(new java.awt.Dimension(1200, 700));
        jPanel11.setLayout(new javax.swing.OverlayLayout(jPanel11));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/40433.jpg"))); // NOI18N
        jLabel29.setAlignmentX(0.5F);
        jLabel29.setAlignmentY(0.0F);
        jPanel11.add(jLabel29);

        jPanel6.add(jPanel11);
        jPanel11.setBounds(0, 0, 1200, 700);

        jPanel12.setBackground(new java.awt.Color(211, 240, 249));
        jPanel12.setLayout(new javax.swing.OverlayLayout(jPanel12));
        jPanel6.add(jPanel12);
        jPanel12.setBounds(0, 0, 1500, 630);

        jTabbedPane1.addTab("Update/Delete", jPanel6);

        jPanel13.setLayout(null);

        order.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Clinic ID", "Vaccine Code", "Quantity", "Price", "SalesPerson", "Status", "Date", "Delivery Date", "comments"
            }
        ));
        jScrollPane2.setViewportView(order);

        sales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Sales Person Name"
            }
        ));
        jScrollPane3.setViewportView(sales);

        assign.setBackground(new java.awt.Color(68, 191, 175));
        assign.setForeground(new java.awt.Color(255, 255, 255));
        assign.setText("Assign");
        assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("Sales Person Assignment");

        javax.swing.GroupLayout workPanel3Layout = new javax.swing.GroupLayout(workPanel3);
        workPanel3.setLayout(workPanel3Layout);
        workPanel3Layout.setHorizontalGroup(
            workPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanel3Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(workPanel3Layout.createSequentialGroup()
                .addGroup(workPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workPanel3Layout.createSequentialGroup()
                        .addGap(369, 369, 369)
                        .addComponent(jLabel10))
                    .addGroup(workPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(workPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assign)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        workPanel3Layout.setVerticalGroup(
            workPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addGap(34, 34, 34)
                .addGroup(workPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(assign)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        jPanel13.add(workPanel3);
        workPanel3.setBounds(0, 0, 1200, 670);

        jPanel14.setLayout(new javax.swing.OverlayLayout(jPanel14));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/8432.jpg"))); // NOI18N
        jLabel9.setAlignmentX(0.3F);
        jLabel9.setAlignmentY(0.0F);
        jPanel14.add(jLabel9);

        jPanel13.add(jPanel14);
        jPanel14.setBounds(0, 0, 1174, 700);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setLayout(new javax.swing.OverlayLayout(jPanel15));
        jPanel13.add(jPanel15);
        jPanel15.setBounds(0, 0, 1500, 630);

        jTabbedPane1.addTab("Orders", jPanel13);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1202, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eMailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eMailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eMailIdActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed

    private void createPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPatientActionPerformed
        // TODO add your handling code here:
        boolean validated = false;
        boolean validatedOtherFields = false;
        String selectedGender = gender1.getSelectedItem().toString();

        JDateChooser strtDt = dob;
        if (strtDt != null) {
            validatedOtherFields = true;
        } else {
            JOptionPane.showMessageDialog(this, "All Fields are Mandatory!");
        }
        JTextField[] VARIABLE_CONSTANTS = {firstName, lastName, eMailId, phone, passWord};
        for (JTextField field : VARIABLE_CONSTANTS) {
            if (!validateData(field)) {
                validated = false;
                break;
            } else {
                validated = true;
                System.out.println("Validated");
            }
        }

        if (validated && validatedOtherFields) {

            SalesPerson patient = new SalesPerson(passWord.getText(), firstName.getText(), lastName.getText(), dateOfBirth.getDate(), eMailId.getText(), gender1.getSelectedItem().toString(), Long.parseLong(phone.getText()), salesAdmin.getManufacturer(), loc.getText());
            populatesales();
            populateSalesDirectory();
            JOptionPane.showMessageDialog(this, "Created Sales Person Succesfully!");
            firstName.setText("");
            lastName.setText("");
            dateOfBirth.setDate(null);
            eMailId.setText("");
            phone.setText("");
            loc.setText("");
            passWord.setText("");
            gender1.setSelectedItem(null);

        } else {
            JOptionPane.showMessageDialog(this, "All Fields are Mandatory!");
        }
    }

    public boolean validateData(JComponent input) {
        String name = input.getName();
        String errorMsg = "";
        boolean raiseError = false;
        String text = ((JTextField) input).getText().trim();
        if (text == null || text.isEmpty()) {
            raiseError = true;
            errorMsg = String.format("Please enter a value. The value for %s cannot be empty", name);
        } else {
            switch (name) {
                case "FirstName":
                    if (!text.matches("^[a-zA-z ]*$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter valid values for %s", name);
                    }
                    break;
                case "LastName":
                    if (!text.matches("^[a-zA-z ]*$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter valid values for %s", name);
                    }
                    break;
                case "Phone":
                    if (!text.matches("^[0-9]{10}")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s", name);
                    }
                    break;
                case "EmailId":
                    if (!ecoSystem.getPasswordManager().isUsernameAvailable(text, "Sales Person")) {
                        raiseError = true;
                        errorMsg = String.format("Email Id already exists, please enter a valid mail Id", name);
                        break;
                    }
                    if (!text.matches("^(.+)@(.+)$")) {
                        raiseError = true;
                        errorMsg = String.format("Please enter a valid %s", name);
                    }
                    break;

                default:
                    break;
            }
        }
        if (raiseError) {
            JOptionPane.showMessageDialog(this, errorMsg);
            return false;
        }
        return true;

    }//GEN-LAST:event_createPatientActionPerformed

    private void firstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameActionPerformed

    private void lastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameActionPerformed

    private void locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationActionPerformed
        // TODO add your handling code here:

        Location lobj = new Location();
        lobj.setVisible(true);
    }//GEN-LAST:event_locationActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String emailsearch = search.getText();
        boolean found = false;
        for (SalesPerson patient : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
            if (patient.getEmailId().equals(emailsearch)) {
                patient.setFirstName(fname.getText());
                patient.setLastName(lname.getText());
                patient.setDateOfBirth(dob.getDate());
                patient.setEmailId(email.getText());
                patient.setGender(gender.getSelectedItem().toString());
                patient.setPhoneNumber(Long.valueOf(pnum.getText()));
                found = true;
                populatesales();
                populateSalesDirectory();
                JOptionPane.showMessageDialog(this, "Sales Person Updated");
                fname.setText("");
                lname.setText("");
                dob.setDate(null);
                email.setText("");
                pnum.setText("");
                    password.setText("");
                    search.setText("");
                break;
            }

        }
        if (!found)
            JOptionPane.showMessageDialog(this, "Sales Person not Found");
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String emailsearch = search.getText();
        boolean found = false;
        for (SalesPerson patient : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
            if (patient.getEmailId().equals(emailsearch)) {
                ecoSystem.getSalesPersonDirectory().removeSalesPerson(patient);
                found = true;
                populatesales();
                populateSalesDirectory();
                JOptionPane.showMessageDialog(this, "Sales Person Deleted");
                fname.setText("");
                lname.setText("");
                dob.setDate(null);
                email.setText("");
                pnum.setText("");
                    password.setText("");
                    search.setText("");
                break;
            }

        }
        if (!found)
            JOptionPane.showMessageDialog(this, "Sales Person not Found");
    }//GEN-LAST:event_deleteActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        // TODO add your handling code here:

        String emailsearch = search.getText();
        boolean found = false;
        for (SalesPerson patient : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
            if (patient.getEmailId().equalsIgnoreCase(emailsearch)) {
                selectedSalesPerson = patient;
                fname.setText(patient.getFirstName());
                lname.setText(patient.getLastName());
                dob.setDate(patient.getDateOfBirth());
                gender.setSelectedItem(patient.getGender());
                email.setText(patient.getEmailId());
                pnum.setText(String.valueOf(patient.getPhoneNumber()));

                found = true;
                break;
            }

        }
        if (!found)
            JOptionPane.showMessageDialog(this, "Sales Person not Found");
    }//GEN-LAST:event_viewActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignActionPerformed
        // TODO add your handling code here:
        int s = sales.getSelectedRow();
        int o = order.getSelectedRow();

        if (s == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Sales Person");
        } else if (o == -1) {
            JOptionPane.showMessageDialog(this, "Please select an order");
        } else {


            for (SalesPerson spObj : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
                //String fullName = spObj.getFirstName()+" "+spObj.getLastName();
                if (spObj.getSalesId().equals(sales.getValueAt(s, 0))) {
                    selectedSalesPerson = spObj;
                    break;
                }
            }
            for (Orders d : ecoSystem.orderDirectory.getOrderdirectory()) {
                if (d.getOrderid().equals(order.getValueAt(o, 0))) {
                    selectedOrder = d;
                    d.setSalesperson(selectedSalesPerson);
                    d.setStatus("Sales Person Assigned");
                    break;
                }
            }
            selectedOrder.setSalesperson(selectedSalesPerson);
            selectedOrder.setStatus("Sales Person Assigned");
            populateOrder();
            JOptionPane.showMessageDialog(this, "Sales Person Assigned");

        }
    }//GEN-LAST:event_assignActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (password.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Password Cannot be empty");
        } else {
            for (SalesPerson pObj : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
                if (pObj.getEmailId().equals(search.getText())) {
                    pObj.setPassword(password.getText());
                    JOptionPane.showMessageDialog(this, "Patient Password Updated");
                    password.setText("");
                    search.setText("");
                    break;
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        // TODO add your handling code here:

        dB40Util.storeSystem(Ecosystem.getInstance());
        Login mf = new Login();
        mf.setVisible(true);
        dispose();

    }//GEN-LAST:event_jLabel24MouseClicked

    private void location1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_location1ActionPerformed
        // TODO add your handling code here:

        loc.setText(ecoSystem.getgMapsLocation().getLatitude() + "," + ecoSystem.getgMapsLocation().getLongitude());
    }//GEN-LAST:event_location1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesAdminWorkArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesAdminWorkArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesAdminWorkArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesAdminWorkArea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SalesAdminWorkArea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assign;
    private javax.swing.JButton createPatient;
    private com.toedter.calendar.JDateChooser dateOfBirth;
    private javax.swing.JButton delete;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField eMailId;
    private javax.swing.JTextField email;
    private javax.swing.JTextField firstName;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JComboBox<String> gender1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField loc;
    private javax.swing.JButton location;
    private javax.swing.JButton location1;
    private javax.swing.JTable order;
    private javax.swing.JTextField passWord;
    private javax.swing.JTextField password;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField pnum;
    private javax.swing.JTable sales;
    private javax.swing.JTable salesPersonTable;
    private javax.swing.JTextField search;
    private javax.swing.JButton update;
    private javax.swing.JButton view;
    private javax.swing.JPanel workPanel;
    private javax.swing.JPanel workPanel1;
    private javax.swing.JPanel workPanel2;
    private javax.swing.JPanel workPanel3;
    // End of variables declaration//GEN-END:variables

    private void populateOrder() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("MMM dd, yyyy");
        DefaultTableModel model = (DefaultTableModel) order.getModel();
        model.setRowCount(0);

        for (Orders person : ecoSystem.getOrderDirectory().getOrderdirectory()) {
            if(salesAdmin.getManufacturer().getManufacturerId().equalsIgnoreCase(person.getVaccine().getManufacturer().getManufacturerId())){
            Object[] row = new Object[12];
            row[0] = person.getOrderid();
            row[1] = person.getClinic().getClinicId();
            row[2] = person.getVaccine().getVcode();
            row[3] = person.getQuantity();
            row[4] = person.getPrice();
            row[5] = person.getSalesperson()!=null?(person.getSalesperson().getFirstName() + " " + person.getSalesperson().getLastName()):"";
            row[6] = person.getStatus();
            row[7] = dateFormat.format(person.getDate());
            row[8] = person.getDelivereddate()!=null?dateFormat.format(person.getDelivereddate()):"";
            row[9] = person.getComments();

            model.addRow(row);
            }
        }
    }

    private void populatesales() {
        DefaultTableModel model = (DefaultTableModel) sales.getModel();
        model.setRowCount(0);

        for (SalesPerson person : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
            if(salesAdmin.getManufacturer().getManufacturerId().equalsIgnoreCase(person.getManufacturer().getManufacturerId())){
            Object[] row = new Object[12];
            row[0] = person.getSalesId();
            row[1] = person.getFirstName() + " " + person.getLastName();

            model.addRow(row);
            }
        }
    }

    private void populateSalesDirectory() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("MMM dd, yyyy");
        DefaultTableModel model = (DefaultTableModel) salesPersonTable.getModel();
        model.setRowCount(0);

        for (SalesPerson person : ecoSystem.getSalesPersonDirectory().getSalesPersonDirectory()) {
            if (salesAdmin.getManufacturer().getManufacturerId().equalsIgnoreCase(person.getManufacturer().getManufacturerId())) {
                Object[] row = new Object[12];
                row[0] = person.getFirstName();
                row[1] = person.getLastName();
                row[2] = person.getEmailId();
                row[3] = person.getGender();
                row[4] = person.getPhoneNumber();
                row[5] = person.getSalesId();
                model.addRow(row);
            }

        }
    }
}
